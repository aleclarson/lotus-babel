// Generated by CoffeeScript 1.12.4
var crawlModule, emptyFunction, initModule, path, transformFiles;

emptyFunction = require("emptyFunction");

path = require("path");

transformFiles = require("./transformFiles");

initModule = require("./initModule");

exports.babel = function(options) {
  var allFiles, modNames;
  modNames = options._;
  if (!modNames.length) {
    return crawlModule(".").then(function(files) {
      return transformFiles(files, options);
    });
  }
  allFiles = [];
  return Promise.chain(modNames, function(modName) {
    return crawlModule(modName).then(function(files) {
      return allFiles = allFiles.concat(files);
    });
  }).then(function() {
    return transformFiles(allFiles, options);
  });
};

crawlModule = function(modName) {
  var mod;
  mod = lotus.modules.load(modName);
  return initModule(mod).then(function(patterns) {
    var ignored;
    ignored = "(.git|node_modules|__tests__|__mocks__)";
    return mod.crawl(patterns, {
      ignored: path.join("**", ignored, "**")
    });
  }).fail(function(error) {
    log.moat(1);
    log.white("A module threw an error: ");
    log.red(lotus.relative(mod.path));
    log.moat(0);
    log.gray(error.stack);
    return log.moat(1);
  });
};
